///
1 - One way vs 2 way
====

In two-way data binding, changes in the UI are reflected in the model (your data source), and changes in the model are reflected in the UI. This is a cycle. In other words, the UI fields are bound to the model data dynamically such that when a user changes the input field, the changes are reflected automatically in the model and vice versa.

For instance, in Angular, if you have an input field that's tied to a model property using `ngModel`, any change to that input field will automatically update the property in the model, and any change to the model property will immediately update the UI.

This is unlike one-way data binding, as in React, where the UI can update the model, but the model does not display changes in the UI without a specific instruction to do so (like using a setState function to update the state and thus re-render the component with the new state).

so angular is Model to View and vice versa 

and react is  View to Modal

CORS
======
if we want to shares resources from one domain to other , then we get the CORS error.
and to tackle this , from our backend we can whitelist the urls which can access the resources for sharing

XSS - Cross Site Scripting 
    - if someone inject some malicious script into our page e.g form or lets say WYSIWIG.
    So to tackle this we should do santizig content before pushing or while setting the token we can set it as httpOnly: true.

CSRF (Cross-Site Request Forgery) 
=============
is a type of security vulnerability that occurs when a malicious website, or instant message causes a user's web browser to perform an unwanted action on a trusted site for which the user is currently authenticated.

to tackle CSRF,  sameSite: true

JWT
===
JWT used in token based authentication, which is used to acces protected routes




